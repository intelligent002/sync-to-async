volumes:
  prometheus-data:

networks:
  sync-to-async:
    driver: bridge

services:
  traefik:
    image: traefik:v3.3
    container_name: traefik
    restart: unless-stopped
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:3000"
      - "--api.dashboard=true"
      - "--api.insecure=true"
    ports:
      - "3000:3000"       # external access to REST via Traefik
      - "8080:8080"       # optional Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - sync-to-async

  rest:
    build:
      context: rest
    labels:
      - "metrics=true"
      - "traefik.enable=true"
      - "traefik.http.routers.rest.rule=PathPrefix(`/`)"
      - "traefik.http.routers.rest.entrypoints=web"
      - "traefik.http.services.rest.loadbalancer.server.port=3000"
    depends_on:
      - redis
    restart: unless-stopped
    expose:
      - "3000"
    networks:
      - sync-to-async
    deploy:
      replicas: 1

  redis:
    image: redis:7
    container_name: redis
    labels:
      - "traefik.enable=false"
    hostname: redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - sync-to-async

  worker:
    build:
      context: ./worker
    labels:
      - "traefik.enable=false"
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - sync-to-async
    deploy:
      replicas: 2

  prometheus:
    build:
      context: ./prometheus
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=false"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-lifecycle
      - --storage.tsdb.retention.time=15d
      - --storage.tsdb.retention.size=5GB
    healthcheck:
      # Test availability of Prometheus service, listening & actually serving
      interval: 60s
      retries: 3
      start_period: 3s
      test: ["CMD-SHELL", "curl -f http://localhost:9090/-/healthy || exit 1"]
      timeout: 10s
    networks:
      - sync-to-async
    ports:
      - "19090:9090"
    restart: unless-stopped
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "prometheus-data:/prometheus"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"